{"version":3,"file":"static/js/678.64fedfa7.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/layout/dist/chunk-P74GIWPW.mjs","../node_modules/@chakra-ui/object-utils/dist/chunk-R3DH46PF.mjs","../node_modules/@chakra-ui/image/dist/chunk-QBIO4VEB.mjs","../node_modules/@chakra-ui/image/dist/chunk-HR33I6FK.mjs","../node_modules/@chakra-ui/image/dist/chunk-SMHKDLMK.mjs","pages/home/Home.js"],"sourcesContent":["// src/text.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Text = forwardRef(function Text2(props, ref) {\n  const styles = useStyleConfig(\"Text\", props);\n  const { className, align, decoration, casing, ...rest } = omitThemingProps(props);\n  const aliasedProps = compact({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing\n  });\n  return /* @__PURE__ */ jsx(\n    chakra.p,\n    {\n      ref,\n      className: cx(\"chakra-text\", props.className),\n      ...aliasedProps,\n      ...rest,\n      __css: styles\n    }\n  );\n});\nText.displayName = \"Text\";\n\nexport {\n  Text\n};\n","// src/compact.ts\nfunction compact(object) {\n  const clone = Object.assign({}, object);\n  for (let key in clone) {\n    if (clone[key] === void 0)\n      delete clone[key];\n  }\n  return clone;\n}\n\nexport {\n  compact\n};\n","// src/native-image.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar NativeImage = forwardRef(function NativeImage2(props, ref) {\n  const { htmlWidth, htmlHeight, alt, ...rest } = props;\n  return /* @__PURE__ */ jsx(\"img\", { width: htmlWidth, height: htmlHeight, ref, alt, ...rest });\n});\nNativeImage.displayName = \"NativeImage\";\n\nexport {\n  NativeImage\n};\n","// src/use-image.ts\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nfunction useImage(props) {\n  const {\n    loading,\n    src,\n    srcSet,\n    onLoad,\n    onError,\n    crossOrigin,\n    sizes,\n    ignoreFallback\n  } = props;\n  const [status, setStatus] = useState(\"pending\");\n  useEffect(() => {\n    setStatus(src ? \"loading\" : \"pending\");\n  }, [src]);\n  const imageRef = useRef();\n  const load = useCallback(() => {\n    if (!src)\n      return;\n    flush();\n    const img = new Image();\n    img.src = src;\n    if (crossOrigin)\n      img.crossOrigin = crossOrigin;\n    if (srcSet)\n      img.srcset = srcSet;\n    if (sizes)\n      img.sizes = sizes;\n    if (loading)\n      img.loading = loading;\n    img.onload = (event) => {\n      flush();\n      setStatus(\"loaded\");\n      onLoad == null ? void 0 : onLoad(event);\n    };\n    img.onerror = (error) => {\n      flush();\n      setStatus(\"failed\");\n      onError == null ? void 0 : onError(error);\n    };\n    imageRef.current = img;\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);\n  const flush = () => {\n    if (imageRef.current) {\n      imageRef.current.onload = null;\n      imageRef.current.onerror = null;\n      imageRef.current = null;\n    }\n  };\n  useSafeLayoutEffect(() => {\n    if (ignoreFallback)\n      return void 0;\n    if (status === \"loading\") {\n      load();\n    }\n    return () => {\n      flush();\n    };\n  }, [status, load, ignoreFallback]);\n  return ignoreFallback ? \"loaded\" : status;\n}\nvar shouldShowFallbackImage = (status, fallbackStrategy) => status !== \"loaded\" && fallbackStrategy === \"beforeLoadOrError\" || status === \"failed\" && fallbackStrategy === \"onError\";\n\nexport {\n  useImage,\n  shouldShowFallbackImage\n};\n","import {\n  NativeImage\n} from \"./chunk-QBIO4VEB.mjs\";\nimport {\n  shouldShowFallbackImage,\n  useImage\n} from \"./chunk-HR33I6FK.mjs\";\n\n// src/image.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\n\n// ../../utilities/object-utils/src/omit.ts\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone) {\n      delete clone[key];\n    }\n  }\n  return clone;\n}\n\n// src/image.tsx\nimport { jsx } from \"react/jsx-runtime\";\nvar Image = forwardRef(function Image2(props, ref) {\n  const {\n    fallbackSrc,\n    fallback,\n    src,\n    srcSet,\n    align,\n    fit,\n    loading,\n    ignoreFallback,\n    crossOrigin,\n    fallbackStrategy = \"beforeLoadOrError\",\n    referrerPolicy,\n    ...rest\n  } = props;\n  const providedFallback = fallbackSrc !== void 0 || fallback !== void 0;\n  const shouldIgnoreFallbackImage = loading != null || ignoreFallback || !providedFallback;\n  const status = useImage({\n    ...props,\n    crossOrigin,\n    ignoreFallback: shouldIgnoreFallbackImage\n  });\n  const showFallbackImage = shouldShowFallbackImage(status, fallbackStrategy);\n  const shared = {\n    ref,\n    objectFit: fit,\n    objectPosition: align,\n    ...shouldIgnoreFallbackImage ? rest : omit(rest, [\"onError\", \"onLoad\"])\n  };\n  if (showFallbackImage) {\n    if (fallback)\n      return fallback;\n    return /* @__PURE__ */ jsx(\n      chakra.img,\n      {\n        as: NativeImage,\n        className: \"chakra-image__placeholder\",\n        src: fallbackSrc,\n        ...shared\n      }\n    );\n  }\n  return /* @__PURE__ */ jsx(\n    chakra.img,\n    {\n      as: NativeImage,\n      src,\n      srcSet,\n      crossOrigin,\n      loading,\n      referrerPolicy,\n      className: \"chakra-image\",\n      ...shared\n    }\n  );\n});\nImage.displayName = \"Image\";\n\nexport {\n  Image\n};\n","import { Box, Flex, Image, Text } from \"@chakra-ui/react\";\nimport imgPhoneBook from '../../img/pngwing.com.png';\n// const styles = {\n//    container: {\n//      minHeight: 'calc(100vh - 50px)',\n//      display: 'flex',\n//      alignItems: 'center',\n//      justifyContent: 'center',\n//    },\n//    title: {\n//      fontWeight: 500,\n//      fontSize: 48,\n//      textAlign: 'center',\n//    },\n//  };\n//  style={styles.container}\n\n export default function Home() {\n   return (\n     <div >\n      <Flex flexWrap=\"wrap\" >\n        <Text fontSize='4xl'>\n         Personal phone book\n        </Text>\n        <Box boxSize='sm'>\n          <Image src={imgPhoneBook} alt='Phone book' \n          objectFit='cover'\n          boxSize='100%'\n          />\n        </Box>\n      </Flex>\n     </div>\n   );\n }"],"names":["Text","forwardRef","props","ref","styles","useStyleConfig","omitThemingProps","rest","className","align","decoration","casing","aliasedProps","object","clone","Object","assign","key","compact","textAlign","textDecoration","textTransform","jsx","chakra","cx","__css","displayName","NativeImage","htmlWidth","htmlHeight","alt","width","height","Image","fallbackSrc","fallback","src","srcSet","fit","loading","ignoreFallback","crossOrigin","fallbackStrategy","referrerPolicy","shouldIgnoreFallbackImage","status","onLoad","onError","sizes","useState","setStatus","useEffect","imageRef","useRef","load","useCallback","flush","img","srcset","onload","event","onerror","error","current","useSafeLayoutEffect","useImage","showFallbackImage","shouldShowFallbackImage","shared","objectFit","objectPosition","keysToOmit","omit","as","Home","flexWrap","fontSize","boxSize","imgPhoneBook"],"sourceRoot":""}
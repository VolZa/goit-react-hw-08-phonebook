{"version":3,"file":"static/js/428.eee3af61.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","redux/services/selector.js","components/ContactForm/ContactForm.js","components/Title/Title.styled.jsx","components/Title/Title.js","pages/contacts-book/Global.styled.jsx","components/Contact-list/ContactList.styled.jsx","components/Loader/RortationLinesLoaler.styled.jsx","components/Loader/RortationLinesLoaler.js","components/Contact-list/ContactList.js","components/Filter/Filter.styled.jsx","components/Filter/Filter.js","components/Layout/Layout.styled.jsx","components/Layout/Layout.js","pages/contacts-book/ContactsBook.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  Field as FormikField,\n  Form as FormikForm,\n  ErrorMessage as FormikErrorMessage,\n} from 'formik';\n\nexport const Title = styled.h1`\n  margin-bottom: 30px;\n`;\n\nexport const Form = styled(FormikForm)`\n  width: 400px;\n  padding: 8px;\n  border: 1px solid #2a2a2a;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Field = styled(FormikField)`\n  font-size: 16px;\n`;\n\nexport const ErrorMessage = styled(FormikErrorMessage)`\n  font-size: 14px;\n  color: ${p => p.theme.colors.error};\n`;\n\nexport const Button = styled.button`\n  font-size: 16px;\n  border: 1px solid ${p => p.theme.colors.black};\n  :hover {\n    background-color: ${p => p.theme.colors.accent};\n    color: ${p => p.theme.colors.white};\n    box-shadow: 0px 2px 10px 2px rgba(0, 0, 0, 0.1);\n  }\n`;\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts;\nexport const selectContactsItems = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectShowingContacts = createSelector(\n   [selectContacts, selectFilter],\n   ({items}, filter) => {\n      return items.filter(contact =>\n         contact.name.toLowerCase().includes(filter.toLowerCase()))\n   }\n);","import { Formik } from 'formik';\n// import { nanoid } from 'nanoid';\nimport * as Yup from 'yup';\nimport {\n  FormLabel,\n  Form,\n  Field,\n  ErrorMessage,\n  Button,\n  Title,\n} from './ContactForm.styled';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContactsItems } from 'redux/services/selector';\nimport { addContact } from 'redux/contacts/operations';\nimport Notiflix from \"notiflix\";\n\n\nconst ContactScheme = Yup.object().shape({\n  name: Yup.string()\n    .matches(\n      /(^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$)/,\n      'Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d`Artagnan'\n    )\n    .required('Required!'),\n  number: Yup.string()\n    .matches(\n      /(\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9})/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required('Required!'),\n});\n\n// export const ContactForm = ({ onAdd }) => {\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContactsItems);\n  const dispatch = useDispatch();\n\n  const handleSubmit = ({name, number}, { resetForm}) => {\n    const contact = {\n      name,\n      phone: number,\n    }\n    const isNameInContacts = contacts.some(contact => contact.name.toLowerCase() === name.toLowerCase());\n    if (isNameInContacts) return Notiflix.Notify.failure(`${name} is already in contacts!`);\n    dispatch(addContact(contact));\n    resetForm();\n  }\n\n  return (\n    <div>\n      <Title>Phonebook</Title>\n      <Formik\n        initialValues={{ name: '', number: '' }}\n        validationSchema={ContactScheme}\n        onSubmit={handleSubmit}\n      >\n        <Form >\n          <FormLabel>\n            Name\n            <Field name=\"name\" placeholder=\"name\" />\n            <ErrorMessage name=\"name\" component=\"span\" />\n          </FormLabel>\n          <FormLabel>\n            Number\n            <Field name=\"number\" placeholder=\"phone number\" />\n            <ErrorMessage name=\"number\" component=\"span\" />\n          </FormLabel>\n          <Button type=\"submit\">Add contact</Button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const TitleS = styled.h2`\n    margin: 0;\n    padding: 8px 0 ;\n    font-size: 24px;\n`;","import PropTypes from 'prop-types';\nimport { TitleS } from \"./Title.styled\";\n\nexport const Title = ({title}) => {\n  return (\n      <TitleS>{title }</TitleS>\n  );\n}\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};","import 'modern-normalize';\nimport { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n    body {\n        margin: 10px;\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n            'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n            sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n    }\n\n    code {\n        font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n        monospace;\n    }\n`;\n","import styled from 'styled-components';\n\nexport const Contacts = styled.ul`\n   padding: 0;\n`\n\nexport const Contact = styled.li`\n   display: flex;\n   width: 350px;\n   justify-content: space-between;\n   margin: 0 0 8px 0;\n   align-items: center;\n`","import styled from 'styled-components';\nexport const RotatingLinesLoader = styled.div`\n   z-index: 9;\n   display: flex;\n   justify-content: center;\n   align-items: center;\n   position: fixed;\n   top: 0;\n   left: 0;\n   width: 100vw;\n   height: 50vh;\n`;","import { RotatingLines } from  'react-loader-spinner'\nimport { RotatingLinesLoader } from './RortationLinesLoaler.styled'\n\nexport const Loader = () => {\nreturn  (\n\n    <RotatingLinesLoader>\n        <RotatingLines\n            strokeColor=\"grey\"\n            strokeWidth=\"5\"\n            animationDuration=\"0.75\"\n            width=\"96\"\n            visible={true}\n        />\n    </RotatingLinesLoader>\n)\n}\n","\nimport { selectError, selectIsLoading, selectShowingContacts } from 'redux/services/selector';\nimport { Contacts, Contact } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { delContact, fetchContacts } from 'redux/contacts/operations';\nimport { useEffect } from 'react';\nimport { Loader } from 'components/Loader/RortationLinesLoaler';\n\nexport const ContactList = () => {\n   const contacts = useSelector(selectShowingContacts);\n   const isLoading = useSelector(selectIsLoading);\n   const isError = useSelector(selectError);\n   const dispatch = useDispatch();\n\n   useEffect(() => {\n      dispatch(fetchContacts())\n   }, [dispatch])\n\n   return (\n      <Contacts>\n         { isLoading && <h2><Loader/></h2>}\n\n         {isError && <h2>error</h2>}  \n         {contacts.map(contact => {\n            return(\n               <Contact key={contact.id}>\n                  <span>{contact.name}: </span>\n                  <span>{contact.phone}</span>\n                  <button type=\"button\" onClick={\n                     ()=>dispatch(delContact(contact.id))} >Delete</button>\n               </Contact>\n            );\n         })} \n\n      </Contacts>\n   );\n};\n","import styled from 'styled-components';\n\nexport const Input  = styled.input`\nmargin-top: 10px;\n`","import { Input } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilter, setValue } from 'redux/filter/filterSlice';\n\nexport const Filter = () => {\n   const dispatch = useDispatch();\n   const filter = useSelector(getFilter);\n   return (\n      <>\n         <label>Find contacts by name<br/>\n            <Input \n               type=\"text\" \n               name='filter' \n               value={filter}           \n               onChange={(e) => {dispatch(setValue (e.currentTarget.value.toLowerCase()))}}\n            />\n         </label>         \n      </>\n   ); \n} \n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n   margin: 0 auto;\n   padding: 4px 16px;\n   max-width: 640px;\n   background: #f5efcf;\n`;\n\n","import { Container } from './Layout.styled';\n\nexport const Layout = ({ children }) => {\n  return <Container>{children}</Container>;\n};\n","import { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { Title } from \"components/Title/Title\";\nimport { GlobalStyle } from \"./Global.styled\";\nimport { ContactList } from 'components/Contact-list/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Layout } from 'components/Layout/Layout';\n\nexport const ContactsBook = () => {\n  return (\n    <Layout>\n      <GlobalStyle />\n      < ContactForm />\n      <Title title=\"Contacts\" />\n      <Filter/>\n      <ContactList/>      \n    </Layout>\n  );  \n};"],"names":["Title","styled","Form","FormikForm","FormLabel","Field","FormikField","ErrorMessage","FormikErrorMessage","p","theme","colors","error","Button","black","accent","white","selectContactsItems","state","contacts","items","selectIsLoading","isLoading","selectError","selectShowingContacts","createSelector","filter","contact","name","toLowerCase","includes","ContactScheme","Yup","shape","matches","required","number","ContactForm","useSelector","dispatch","useDispatch","initialValues","validationSchema","onSubmit","resetForm","phone","isNameInContacts","some","Notiflix","addContact","placeholder","component","type","TitleS","title","GlobalStyle","createGlobalStyle","Contacts","Contact","RotatingLinesLoader","Loader","strokeColor","strokeWidth","animationDuration","width","visible","ContactList","isError","useEffect","fetchContacts","map","onClick","delContact","id","Input","Filter","getFilter","value","onChange","e","setValue","currentTarget","Container","Layout","children","ContactsBook"],"sourceRoot":""}